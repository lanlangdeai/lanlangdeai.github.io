{"./":{"url":"./","title":"简介","keywords":"","body":"1.1. Introduction1.1. Introduction lanlangdeai            updated 2021-05-18 10:00:19 "},"php/php.html":{"url":"php/php.html","title":"PHP","keywords":"","body":" lanlangdeai            updated 2021-05-19 17:30:46 "},"php/classes.html":{"url":"php/classes.html","title":"常用类","keywords":"","body":"1.2.1. 代码示例1.2.1. 代码示例 国风大赏过过过过过过过过过过过 php version lanlangdeai            updated 2021-05-22 15:29:46 "},"python/python.html":{"url":"python/python.html","title":"Python","keywords":"","body":"1.3. Python语言1.3.1. 相关文档1.3. Python语言 1.3.1. 相关文档 官方文档：https://docs.python.org/3/ 官网中文版3.7 本地手册查看 lanlangdeai            updated 2021-05-26 15:52:15 "},"python/basics.html":{"url":"python/basics.html","title":"基础语法","keywords":"","body":"1.3.1. 基础语法1.3.1. 基础语法 lanlangdeai            updated 2021-05-26 11:27:31 "},"python/functions.html":{"url":"python/functions.html","title":"函数/方法","keywords":"","body":"1.3.2. 常用方法&函数1.3.2. 常用方法&函数 repr - 将对象转化为共解释器读取的形式 >>>s = 'RUNOOB' >>> repr(s) \"'RUNOOB'\" >>> dict = {'runoob': 'runoob.com', 'google': 'google.com'}; >>> repr(dict) \"{'google': 'google.com', 'runoob': 'runoob.com'}\" >>> lanlangdeai            updated 2021-05-26 11:27:31 "},"python/cases.html":{"url":"python/cases.html","title":"示例","keywords":"","body":"1.3.3. 开发实战例子1.3.3. 开发实战例子 lanlangdeai            updated 2021-05-28 09:41:38 "},"golang/golang.html":{"url":"golang/golang.html","title":"Golang","keywords":"","body":" lanlangdeai            updated 2021-05-19 17:31:06 "},"linux/linux.html":{"url":"linux/linux.html","title":"Linux","keywords":"","body":" lanlangdeai            updated 2021-05-19 17:31:18 "},"linux/commands.html":{"url":"linux/commands.html","title":"常用命令","keywords":"","body":" lanlangdeai            updated 2021-06-03 22:09:29 "},"linux/scripts.html":{"url":"linux/scripts.html","title":"常用脚本","keywords":"","body":"1.5.2. 常用脚本1.5.2. 常用脚本 守护进程 #!/bin/bash #守护进程 while true do c=`ps -ef | grep api/wx/deal_up_event | grep -v grep | wc -l` if [ $c -lt 1 ] then nohup php /www/wwwroot/SsCpc/index.php api/wx/deal_up_event > /dev/null 2>&1 & echo $! fi sleep 10 lanlangdeai            updated 2021-05-25 18:52:32 "},"linux/supervisor.html":{"url":"linux/supervisor.html","title":"Supervisor","keywords":"","body":"1.5.3. 进程管理工具之Supervisor1.5.3.1. 介绍1.5.3.2. 开启启动1.5.3. 进程管理工具之Supervisor 1.5.3.1. 介绍 ​ Supervisor是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。它是通过fork/exec的方式把这些被管理的进程当作supervisor的子进程来启动，这样只要在supervisor的配置文件中，把要管理的进程的可执行文件的路径写进去即可。也实现当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，可以选择是否自己启动和报警。 1.5.3.2. 开启启动 添加系统服务配置文件 vim /lib/systemd/system/supervisord.service 添加配置项 [Unit] Description=supervisord daemon [Service] Type=forking ExecStart=/bin/supervisord -c /etc/supervisord/supervisord.conf ExecReload=/bin/supervisorctl reload ExecStop=/bin/supervisorctl shutdown KillMode=process Restart=on-failure RestartSec=30s [Install] WantedBy=multi-user.target 说明与注意点 RestartSec: 开机多久之后启动 常用命令 a)开启服务 systemctl enable supervisord lanlangdeai            updated 2021-05-25 10:20:43 "},"mysql/mysql.html":{"url":"mysql/mysql.html","title":"MySQL","keywords":"","body":" lanlangdeai            updated 2021-05-24 18:22:29 "},"docker/docker.html":{"url":"docker/docker.html","title":"Docker","keywords":"","body":" lanlangdeai            updated 2021-05-24 18:22:39 "},"apache/apache.html":{"url":"apache/apache.html","title":"Apache","keywords":"","body":" lanlangdeai            updated 2021-05-24 19:12:33 "},"nginx/nginx.html":{"url":"nginx/nginx.html","title":"Nginx","keywords":"","body":" lanlangdeai            updated 2021-05-24 19:13:13 "},"nginx/install.html":{"url":"nginx/install.html","title":"安装篇","keywords":"","body":"1.9.1. Nginx之安装篇1.9.1.1. 设置开启启动1.9.1. Nginx之安装篇 1.9.1.1. 设置开启启动 添加系统服务配置文件 vim /lib/systemd/system/nginx.service 添加配置项 [Unit] Description=nginx After=network.target [Service] Type=forking ExecStart=/bin/nginx ExecReload=/bin/nginx -s reload ExecStop=/bin/nginx -s quit PrivateTmp=true [Install] WantedBy=multi-user.target 说明与注意点 ``` Description:描述服务 After:描述服务类别 [Service]服务运行参数的设置 Type=forking是后台运行的形式 ExecStart为服务的具体运行命令 ExecReload为重启命令 ExecStop为停止命令 PrivateTmp=True表示给服务分配独立的临时空间 [Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3 注意：[Service]的启动、重启、停止命令全部要求使用绝对路径 4. 常用命令 a)加入开机启动 systemctl enable nginx b)禁止开机启动 systemctl disable nginx c)启动服务 systemctl start nginx d)停止服务 systemctl stop nginx e)查看服务状态 systemctl status nginx f)查看所有已启动的服务 systemctl list-units -type=service ``` lanlangdeai            updated 2021-05-25 09:51:49 "},"nginx/config.html":{"url":"nginx/config.html","title":"配置篇","keywords":"","body":"1.9.2. 配置篇1.9.2. 配置篇 非www，默认跳转www地址 server { listen 80; server_name www.xxx.com xxx.com; if ($host != 'www.xxx.com') { rewrite ^/(.*)$ http://www.xxx.com/$1 permanent; } } 生产环境基本配置 upstream common { server 127.0.0.1:5101; server 127.0.0.1:5102; } upstream search { server 172.16.114.52:5301; server 172.16.114.52:5302; } limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s; server { listen 80; server_name www.demo.com; return 301 https://www.demo.com$request_uri; } server { listen 443 ssl; server_name www.demo.com; ssl on; ssl_certificate /etc/nginx/ssl/demo.com.fullchain.cert; ssl_certificate_key /etc/nginx/ssl/demo.com.key; client_max_body_size 20m; gzip on; limit_req zone=one burst=10; access_log /data0/varlog/nginx/www_demo.access.log main; error_log /data0/varlog/nginx/www_demo.error.log error; if ( $host != 'www.demo.com' ) { rewrite ^(.*)$ https://www.demo.com$1 permanent; } location / { proxy_pass http://127.0.0.1:3000; } location ~* /fbmain/(common|account|monitor|history_crawl|user|pay|need) { proxy_pass_header Server; proxy_set_header Host $http_host; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_pass http://common; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } location ~ /fbmain/search { proxy_pass_header Server; proxy_set_header Host $http_host; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_pass http://search; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } location /static { root /data0/wwwroot/nuxt/main_monitor_flask; } location ~ /static/v1/auto_login { proxy_pass_header Server; proxy_set_header Host $http_host; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_pass http://127.0.0.1:5101; } } lanlangdeai            updated 2021-05-25 19:06:10 "},"elasticsearch/elasticsearch.html":{"url":"elasticsearch/elasticsearch.html","title":"Elasticsearch","keywords":"","body":" lanlangdeai            updated 2021-05-24 19:13:54 "},"memcache/memecache.html":{"url":"memcache/memecache.html","title":"Memcache","keywords":"","body":" lanlangdeai            updated 2021-05-24 19:14:13 "},"mongodb/mongodb.html":{"url":"mongodb/mongodb.html","title":"MongoDB","keywords":"","body":" lanlangdeai            updated 2021-05-24 19:14:37 "},"mongodb/scripts.html":{"url":"mongodb/scripts.html","title":"脚本汇总","keywords":"","body":"1.12.1. 脚本汇总1.12.1. 脚本汇总 管理MongoDB操作脚本 ```bash start() { /usr/bin/mongod --fork --config /etc/mongod.conf } stop() { /usr/bin/mongod --config /etc/mongod.conf --shutdown } case \"$1\" in start) start ;; stop) stop ;; restart) stop start ;; *) echo \"Usage: $0 {start|stop|restart}\" exit 0 ;; esac exit 0 ``` lanlangdeai            updated 2021-05-25 18:24:20 "},"redis/redis.html":{"url":"redis/redis.html","title":"Redis","keywords":"","body":" lanlangdeai            updated 2021-05-24 19:49:57 "},"nodejs/nodejs.html":{"url":"nodejs/nodejs.html","title":"Nodejs","keywords":"","body":" lanlangdeai            updated 2021-05-24 19:38:36 "},"nodejs/install.html":{"url":"nodejs/install.html","title":"安装篇","keywords":"","body":"1.14.1. 安装篇1.14.1.1. NODE1.14.1.2. NPM1.14.1.2.1. NPM加速1.14.1. 安装篇 1.14.1.1. NODE 1.14.1.2. NPM Node.js 的依赖包管理生态系统 npm, 是世界上最大的生态系统开源库。 1.14.1.2.1. NPM加速 ​ 原因：npm 默认是从国外的源获取和下载包信息，有时甚至被墙，导致无法正常安装软件。 ​ 解决： ​ 在安装软件的时候使用--registry来注册镜像地址到国内的镜像（每次使用都需要指定国内的镜像） npm install gitbook-cli -g --registry=http://registry.npm.taobao.org 可以将国内镜像设置为默认的镜像源 npm config set registry=http://registry.npm.taobao.org 使用cnpm来替代npm npm install -g cnpm --registry=https://registry.npm.taobao.org * 安装完成之后就可以使用cnpm来进行相关软件的安装 cnpm install [name] lanlangdeai            updated 2021-06-03 21:20:23 "},"developer/developer.html":{"url":"developer/developer.html","title":"开发者工具","keywords":"","body":" lanlangdeai            updated 2021-06-05 10:01:27 "},"developer/webs.html":{"url":"developer/webs.html","title":"技术站点","keywords":"","body":" lanlangdeai            updated 2021-06-05 10:01:41 "},"softwares/softwares.html":{"url":"softwares/softwares.html","title":"常用软件","keywords":"","body":" lanlangdeai            updated 2021-05-24 19:50:27 "},"common/donate.html":{"url":"common/donate.html","title":"赞赏","keywords":"","body":"1.17. 赞赏1.17. 赞赏 本书由gitbook制作，提供 pdf, epub, mobi格式的下载。开源项目地址：Github 如果您从本书得到了一些收获，欢迎扫码赞赏我，您的支持会激励我创作更多优质内容。 lanlangdeai            updated 2021-05-24 18:23:19 "}}